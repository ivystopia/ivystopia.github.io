#!/usr/bin/env python3

# Fully delete an IAM role, even if it has attached policies

# inline policies are deleted
# managed policies are detached
# and the role is removed from all instance profiles

# Usage: ./delete_iam_role role_name

import sys
import boto3
import os


# Delete all inline policies attached to the given role
def delete_inline_policies(role):
    print(f"Deleting inline policies for role: {role.name}")
    for policy in role.policies.all():
        print(f"    - {policy.name}")
        policy.delete()


# Detach all managed policies attached to the given role
def detach_managed_policies(role):
    print(f"Detaching managed policies for role: {role.name}")
    for policy in role.attached_policies.all():
        print(f"    - {policy.arn}")
        role.detach_policy(PolicyArn=policy.arn)


# Remove the given role from all instance profiles it is associated with
def remove_from_instance_profiles(role):
    print("Removing role from instance profiles")
    for profile in role.instance_profiles.all():
        print(f"    - {profile.name}")
        role.remove_from_instance_profile(InstanceProfileName=profile.name)


# Delete the role (it must have no attached policies or instance profiles)
def delete_role(role):
    print("Deleting role")
    role.delete()


# Main script execution
try:
    role_name = sys.argv[1]
except IndexError:
    print(f"Usage: {sys.argv[0]} bucket_name")
    exit(1)

account_id = boto3.client("sts").get_caller_identity().get("Account")
aws_profile = os.environ.get("AWS_PROFILE")

# Make sure the user is deleting the role they intended to
print()
print("AWS_PROFILE = " + os.environ.get("AWS_PROFILE"))
print("Account ID  = " + account_id)
print("IAM role    = " + role_name)
print()
print("Press enter to DELETE the above role and all its inline policies.")
input("Press Ctrl-C to cancel.")

# Carry out the actions
role = boto3.Session(profile_name=aws_profile).resource("iam").Role(role_name)
delete_inline_policies(role)
detach_managed_policies(role)
remove_from_instance_profiles(role)
delete_role(role)
print("All operations completed successfully")
